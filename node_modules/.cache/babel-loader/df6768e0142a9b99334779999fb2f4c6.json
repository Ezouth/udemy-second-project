{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tyler (SCK)\\\\Documents\\\\React Projects\\\\udemy\\\\udemy-course-project-react-two\\\\src\\\\components\\\\CourseGoals\\\\CourseInput\\\\CourseInput.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Button from '../../UI/Button/Button';\nimport './CourseInput.css';\nimport styles from './CourseInput.module.css'; // import styled from 'styled-components';\n// const FormControl = styled.div`\n//  {\n//   margin: 0.5rem 0;\n// }\n// & label {\n//   font-weight: bold;\n//   display: block;\n//   margin-bottom: 0.5rem;\n//   color: ${props => (props.invalid ? 'red' : 'black')}\n// }\n// & input {\n//   display: block;\n//   width: 100%;\n//   border: 1px solid ${(props) => (props.invalid ? 'red' : '#ccc')};\n//   background: ${props => (props.invalid ? '#ffd7d7' : 'transparent')}\n//   font: inherit;\n//   line-height: 1.5rem;\n//   padding: 0 0.25rem;\n// }\n// & input:focus {\n//   outline: none;\n//   background: #fad0ec;\n//   border-color: #8b005d;\n// }\n// `;\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CourseInput = props => {\n  _s();\n\n  const [enteredValue, setEnteredValue] = useState('');\n  const [isValid, setIsValid] = useState(true);\n\n  const goalInputChangeHandler = event => {\n    setEnteredValue(event.target.value);\n  };\n\n  const formSubmitHandler = event => {\n    event.preventDefault();\n\n    if (enteredValue.trim().length === 0) {\n      setIsValid(false);\n      return;\n    }\n\n    props.onAddGoal(enteredValue);\n  }; // TW This was how we were doing it before using styled-components\n  // <form onSubmit={formSubmitHandler}>\n  //  <div className={`form-control ${!isValid ? 'invalid' : ''}` }>\n  // <label>Course Goal</label>\n  // <input type=\"text\" onChange={goalInputChangeHandler} />\n  // </div> \n  // <Button type=\"submit\">Add Goal</Button> \n  // </form> \n  // TW This was using styled components, however we also can use styled-components \n  // more dynamically like I'm doing down below\n  //  <form onSubmit={formSubmitHandler}>\n  //  <FormControl className={!isValid && 'invalid'}>\n  //    <label>Course Goal</label>\n  //    <input type=\"text\" onChange={goalInputChangeHandler} />\n  //  </FormControl>\n  //  <Button type=\"submit\">Add Goal</Button>\n  // </form>\n  // note that the div with className={styles['form-control']} \n  // has that odd syntax because a dash was used in the name\n\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${styles['form-control']} && {!isValid && styles.invalid}`,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Course Goal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: goalInputChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      children: \"Add Goal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CourseInput, \"Ni07CKV3TMNSLbvOpvFwyLAEJlc=\");\n\n_c = CourseInput;\nexport default CourseInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"CourseInput\");","map":{"version":3,"sources":["C:/Users/Tyler (SCK)/Documents/React Projects/udemy/udemy-course-project-react-two/src/components/CourseGoals/CourseInput/CourseInput.js"],"names":["React","useState","Button","styles","CourseInput","props","enteredValue","setEnteredValue","isValid","setIsValid","goalInputChangeHandler","event","target","value","formSubmitHandler","preventDefault","trim","length","onAddGoal"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAO,mBAAP;AACA,OAAOC,MAAP,MAAmB,0BAAnB,C,CAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;;;;AAEA,MAAMC,WAAW,GAAGC,KAAK,IAAI;AAAA;;AAC3B,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCN,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,IAAD,CAAtC;;AAEA,QAAMS,sBAAsB,GAAGC,KAAK,IAAI;AACtCJ,IAAAA,eAAe,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf;AACD,GAFD;;AAIA,QAAMC,iBAAiB,GAAGH,KAAK,IAAI;AACjCA,IAAAA,KAAK,CAACI,cAAN;;AACA,QAAIT,YAAY,CAACU,IAAb,GAAoBC,MAApB,KAA+B,CAAnC,EAAsC;AACpCR,MAAAA,UAAU,CAAC,KAAD,CAAV;AACA;AACD;;AACDJ,IAAAA,KAAK,CAACa,SAAN,CAAgBZ,YAAhB;AACD,GAPD,CAR2B,CAiB7B;AACA;AACE;AACA;AACA;AACA;AACA;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;AACE,sBACE;AAAM,IAAA,QAAQ,EAAEQ,iBAAhB;AAAA,4BACE;AAAK,MAAA,SAAS,EAAG,GAAEX,MAAM,CAAC,cAAD,CAAiB,kCAA1C;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,QAAQ,EAAEO;AAA7B;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CA/CD;;GAAMN,W;;KAAAA,W;AAiDN,eAAeA,WAAf","sourcesContent":["import React, { useState } from 'react';\n\nimport Button from '../../UI/Button/Button';\nimport './CourseInput.css';\nimport styles from './CourseInput.module.css'\n\n// import styled from 'styled-components';\n// const FormControl = styled.div`\n//  {\n//   margin: 0.5rem 0;\n// }\n\n// & label {\n//   font-weight: bold;\n//   display: block;\n//   margin-bottom: 0.5rem;\n//   color: ${props => (props.invalid ? 'red' : 'black')}\n// }\n\n// & input {\n//   display: block;\n//   width: 100%;\n//   border: 1px solid ${(props) => (props.invalid ? 'red' : '#ccc')};\n//   background: ${props => (props.invalid ? '#ffd7d7' : 'transparent')}\n//   font: inherit;\n//   line-height: 1.5rem;\n//   padding: 0 0.25rem;\n// }\n\n// & input:focus {\n//   outline: none;\n//   background: #fad0ec;\n//   border-color: #8b005d;\n// }\n\n// `;\n\nconst CourseInput = props => {\n  const [enteredValue, setEnteredValue] = useState('');\n  const [isValid, setIsValid] = useState(true)\n\n  const goalInputChangeHandler = event => {\n    setEnteredValue(event.target.value);\n  };\n\n  const formSubmitHandler = event => {\n    event.preventDefault();\n    if (enteredValue.trim().length === 0) {\n      setIsValid(false);\n      return;\n    }\n    props.onAddGoal(enteredValue);\n  };\n\n// TW This was how we were doing it before using styled-components\n// <form onSubmit={formSubmitHandler}>\n  //  <div className={`form-control ${!isValid ? 'invalid' : ''}` }>\n  // <label>Course Goal</label>\n  // <input type=\"text\" onChange={goalInputChangeHandler} />\n  // </div> \n  // <Button type=\"submit\">Add Goal</Button> \n // </form> \n\n// TW This was using styled components, however we also can use styled-components \n// more dynamically like I'm doing down below\n//  <form onSubmit={formSubmitHandler}>\n//  <FormControl className={!isValid && 'invalid'}>\n//    <label>Course Goal</label>\n//    <input type=\"text\" onChange={goalInputChangeHandler} />\n//  </FormControl>\n//  <Button type=\"submit\">Add Goal</Button>\n// </form>\n\n// note that the div with className={styles['form-control']} \n// has that odd syntax because a dash was used in the name\n  return (\n    <form onSubmit={formSubmitHandler}>\n      <div className={`${styles['form-control']} && {!isValid && styles.invalid}`}>\n        <label>Course Goal</label>\n        <input type=\"text\" onChange={goalInputChangeHandler} />\n      </div>\n      <Button type=\"submit\">Add Goal</Button>\n    </form>\n  );\n};\n\nexport default CourseInput;\n"]},"metadata":{},"sourceType":"module"}